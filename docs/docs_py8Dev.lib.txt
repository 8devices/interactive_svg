Protocol structure:

===================================
JSON commands
===================================

* svgId (string) - SVG image ID. If element is not in SVG do not set it at all.

* elmId (string) - IDc for element that will be affected

* style (object) - object with styles (ex. {"color":"red","border":"1px solid #ccc"})

* attrSet (object) - object with attributes that must be set (ex. {"disabled":"disabled","class":"newClass"})
	For "class" attribute multiple values can be provided (string - "newClass", array - ["newClass1","newClass2"])

* attrRem (object) - object with attributes that must be removed (ex. {"disabled":"","class":"someClass"})
	When removing other than "class" attribute there is no need to provide value
	To remove one class then provide its name as value (ex. {"class":"someClass"})
	To remove all classes then provide empty value (ex. {"class":""})

* eventAdd - WORKS 
	TODO: write description

* eventRem - NOT IMPLEMENTED YET 
	TODO: implement and write description



===================================
EXAMPLES
===================================

####
# 1. Set element (id="path7334") styles on SVG image (id="svg_img")
####
{
	"svgId": "svg_img", 
	"elmId": "path7334", 
	"style": {
		"fill": "#118811",
		"color": "#222222"
	}
}

####
# 2. Set element (id="button-start") class to "btn-default" () and remove disabled attribute
####
{
	"elmId": "button-start", 
	"attrSet": {
		"class": "btn-default"
	},
	"attrRem": {
		"disabled": ""
	}
}
